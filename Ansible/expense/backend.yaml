- name: MySQL configuration
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.pavandevopssept2024.online
    
  tasks:
    - name: Disable the Node.js module
      ansible.builtin.command: dnf module disable nodejs -y

    - name: Enable the Node.js version 20 module
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: Install the Node.js package
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: Create the expense user
      ansible.builtin.user:
        name: expense

    - name: Create the app directory 
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download the application file and store it in the temp directory
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: Unzip the application code to the app directory
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    - name: redirect to app directory
      ansible.builtin.shell: cd /app

    - name: Install the Node.js package
      ansible.builtin.command: npm install

    - name: copy the backend service file
      ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

    - name: connecting to sql server
      community.mysql.mysql_info:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_host: "{{ login_host }}"
      

    